{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], // we used Object.keys to change our collections object to array for working with map on collection overview\ncollections => collections ? Object.keys(collections).map(key => collections[key]) : [] // Object,keys(collections) ---> ['hat','sneakers', 'jackets' ...]\n// we map the keys to get all collections as array with  .map(key => collections[key]) -->\n// map(key => collections[hat]) , map(key => collections[sneakers]) and so on so forth\n); // to matching string from url with collection id map\n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null); // const COLLECTION_ID_MAP = {\n//     hats: 1,\n//     sneakers: 2,\n//     jackets: 3,\n//     womens: 4,\n//     mens: 5\n// }\n//     // to matching string from url with collection id map\n// export const selectCollection = collectionUrlParam =>\n// createSelector(\n//     [selectCollections],\n//     collections =>\n//         collections.find(\n//             collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\n//         )\n// )","map":{"version":3,"sources":["/Users/Roxas/Documents/Websites/clothy/src/component/redux/shop/shop.selector.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAGA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,iBAAD,CADqD,EAErD;AACAC,WAAW,IAAIA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAHhC,CAIrD;AACA;AACA;AANqD,CAAlD,C,CASP;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAC9CZ,cAAc,CACV,CAACI,iBAAD,CADU,EAEVC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFrD,CADX,C,CAQH;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createSelector } from 'reselect'\n\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    // we used Object.keys to change our collections object to array for working with map on collection overview\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n    // Object,keys(collections) ---> ['hat','sneakers', 'jackets' ...]\n    // we map the keys to get all collections as array with  .map(key => collections[key]) -->\n    // map(key => collections[hat]) , map(key => collections[sneakers]) and so on so forth\n)\n\n// to matching string from url with collection id map\nexport const selectCollection = collectionUrlParam =>\n    createSelector(\n        [selectCollections],\n        collections => collections ? collections[collectionUrlParam] : null\n    )\n\n\n\n    // const COLLECTION_ID_MAP = {\n    //     hats: 1,\n    //     sneakers: 2,\n    //     jackets: 3,\n    //     womens: 4,\n    //     mens: 5\n    // }\n\n//     // to matching string from url with collection id map\n// export const selectCollection = collectionUrlParam =>\n// createSelector(\n//     [selectCollections],\n//     collections =>\n//         collections.find(\n//             collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\n//         )\n// )"]},"metadata":{},"sourceType":"module"}