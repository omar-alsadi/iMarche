{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, createUserProfileDocument, googleProvider } from '../../firebase/firebase-utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapShot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapShot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/Roxas/Documents/Websites/clothy/src/component/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","createUserProfileDocument","googleProvider","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","snapShot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,cAA1C,QAAgE,+BAAhE;AAEA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,kBAJJ,QAKO,eALP;AAOA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBP,cAArB,CAAvB;AACA,UAAMQ,OAAO,GAAG,MAAMZ,IAAI,CAACG,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMG,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAAEU,MAAAA,EAAE,EAAEF,QAAQ,CAACE,EAAf;AAAmB,SAAGF,QAAQ,CAACG,IAAT;AAAtB,KAAD,CAApB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMrB,UAAU,CACZI,eAAe,CAACkB,iBADJ,EAEZV,gBAFY,CAAhB;AAIH;AAGD,OAAO,UAAUW,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAC/D,MAAI;AACA,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,OAAO,GAAG,MAAMZ,IAAI,CAACG,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMG,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMhB,GAAG,CAACS,kBAAkB,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,QAAQ,CAACE,EAAf;AAAmB,SAAGF,QAAQ,CAACG,IAAT;AAAtB,KAAD,CAAnB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACU,kBAAkB,CAACS,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUQ,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CACZI,eAAe,CAACyB,gBADJ,EAEZN,eAFY,CAAhB;AAIH;AAED,OAAO,UAAUO,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,EAA4BlB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport { auth, createUserProfileDocument, googleProvider } from '../../firebase/firebase-utils'\n\nimport {\n    googleSignInSuccess,\n    googleSignInFailure,\n    emailSignInSuccess,\n    emailSignInFailure\n} from './user.action'\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const snapShot = yield userRef.get();\n        yield put(googleSignInSuccess({ id: snapShot.id, ...snapShot.data() }))\n    } catch (error) {\n        yield put(googleSignInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        UserActionTypes.GOOGLE_SIGN_START,\n        signInWithGoogle\n    )\n}\n\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user);\n        const snapShot = yield userRef.get();\n        yield put(emailSignInSuccess({ id: snapShot.id, ...snapShot.data() }))\n    } catch (error) {\n        yield put(emailSignInFailure(error))\n    }\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(\n        UserActionTypes.EMAIL_SIGN_START,\n        signInWithEmail\n    )\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}