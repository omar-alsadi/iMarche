{"ast":null,"code":"import { ShopActionType } from './shop.type';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase-utils';\nexport const fetchingCollectionStart = () => ({\n  type: ShopActionType.FETCH_COLLECTIONS_START\n});\nexport const fetchingCollectionSuccess = collectionsMap => ({\n  type: ShopActionType.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchingCollectionFailure = () => ({\n  type: ShopActionType.FETCH_COLLECTIONS_FAILURE,\n  payload: action.payload.message\n});\nexport const fetchingCollectionSuccessAsync = () => {\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapShot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n    fetchingCollectionSuccess(collectionsMap);\n  });\n}; // we used it before fetching and before using thunk\n// export const updateCollections = (collectionsMap) => ({\n//     type: ShopActionType.UPDATE_COLLECTION,\n//     payload: collectionsMap\n// })","map":{"version":3,"sources":["/Users/Roxas/Documents/Websites/clothy/src/component/redux/shop/shop.action.js"],"names":["ShopActionType","firestore","convertCollectionsSnapshotToMap","fetchingCollectionStart","type","FETCH_COLLECTIONS_START","fetchingCollectionSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchingCollectionFailure","FETCH_COLLECTIONS_FAILURE","action","message","fetchingCollectionSuccessAsync","collectionRef","collection","get","then","snapShot"],"mappings":"AAAA,SAASA,cAAT,QAA+B,aAA/B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,uBAAuB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,cAAc,CAACK;AADqB,CAAP,CAAhC;AAIP,OAAO,MAAMC,yBAAyB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEJ,cAAc,CAACQ,yBADqC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAlC;AAIP,OAAO,MAAMG,yBAAyB,GAAG,OAAO;AAC5CN,EAAAA,IAAI,EAAEJ,cAAc,CAACW,yBADuB;AAE5CF,EAAAA,OAAO,EAAEG,MAAM,CAACH,OAAP,CAAeI;AAFoB,CAAP,CAAlC;AAKP,OAAO,MAAMC,8BAA8B,GAAG,MAAM;AAChD,QAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,UAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAb,IAAAA,yBAAyB,CAACC,cAAD,CAAzB;AACH,GAHD;AAMH,CATM,C,CAWH;AACJ;AACA;AACA;AACA","sourcesContent":["import { ShopActionType } from './shop.type'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase-utils'\n\nexport const fetchingCollectionStart = () => ({\n    type: ShopActionType.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchingCollectionSuccess = (collectionsMap) => ({\n    type: ShopActionType.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\nexport const fetchingCollectionFailure = () => ({\n    type: ShopActionType.FETCH_COLLECTIONS_FAILURE,\n    payload: action.payload.message\n})\n\nexport const fetchingCollectionSuccessAsync = () => {\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef.get().then(snapShot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapShot)\n        fetchingCollectionSuccess(collectionsMap);\n    }\n\n    )\n}\n\n    // we used it before fetching and before using thunk\n// export const updateCollections = (collectionsMap) => ({\n//     type: ShopActionType.UPDATE_COLLECTION,\n//     payload: collectionsMap\n// })\n\n\n\n"]},"metadata":{},"sourceType":"module"}