{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase-utils';\nimport { fetchingCollectionSuccess, fetchingCollectionFailure } from './shop.action';\nimport ShopActionType from './shop.type';\nexport function* fetchCollectionsAsyn() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get(); // or we can use 'const collectionsMap = convertCollectionsSnapshotToMap(snapshot)'\n\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchingCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchingCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionType.FETCH_COLLECTIONS_START, fetchCollectionsAsyn);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/Roxas/Documents/Websites/clothy/src/component/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchingCollectionSuccess","fetchingCollectionFailure","ShopActionType","fetchCollectionsAsyn","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,yBADJ,EAEIC,yBAFJ,QAGO,eAHP;AAKA,OAAOC,cAAP,MAA2B,aAA3B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,MAAI;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAFA,CAIA;;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAkCO,QAAlC,CAAjC;AAEA,UAAMV,GAAG,CAACI,yBAAyB,CAACQ,cAAD,CAA1B,CAAT;AAEH,GATD,CASE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACK,yBAAyB,CAACQ,KAAK,CAACC,OAAP,CAA1B,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMjB,UAAU,CACZQ,cAAc,CAACU,uBADH,EAEZT,oBAFY,CAAhB;AAIH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase-utils'\n\nimport {\n    fetchingCollectionSuccess,\n    fetchingCollectionFailure\n} from './shop.action'\n\nimport ShopActionType from './shop.type'\n\nexport function* fetchCollectionsAsyn() {\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n\n        // or we can use 'const collectionsMap = convertCollectionsSnapshotToMap(snapshot)'\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n\n        yield put(fetchingCollectionSuccess(collectionsMap));\n\n    } catch (error) {\n        yield put(fetchingCollectionFailure(error.message))\n    }\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(\n        ShopActionType.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsyn\n    )\n}\n\nexport function* shopSagas() {\n    yield all([call(fetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}