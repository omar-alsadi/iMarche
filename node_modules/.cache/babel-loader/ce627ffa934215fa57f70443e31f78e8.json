{"ast":null,"code":"var _jsxFileName = \"/Users/Roxas/Documents/Websites/clothy/src/component/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport FormInput from '../../component/form-input/form-input.component';\nimport CustomButton from '../../component/custom-button/custom-button.component';\nimport { auth } from '../firebase/firebase-utils';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../redux/user/user.action';\nimport './sign-in.style.scss';\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password); // try {\n      //     await auth.signInWithEmailAndPassword(email, password);\n      //     this.setState({ email: '', password: '' })\n      // } catch (err) {\n      //     alert(\"The user Email / Password wrong or not exist !\")\n      //     console.log(err)\n      // }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"I have already an account\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Sign in with your Email and Password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      label: \"password\",\n      required: true,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: googleSignInStart,\n      isGoogleButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Sign In with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/Roxas/Documents/Websites/clothy/src/component/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","connect","googleSignInStart","emailSignInStart","SignIn","Component","constructor","handleSubmit","event","preventDefault","props","email","password","state","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FormInput from '../../component/form-input/form-input.component'\nimport CustomButton from '../../component/custom-button/custom-button.component'\nimport { auth } from '../firebase/firebase-utils'\n\nimport { connect } from 'react-redux'\n\nimport { googleSignInStart, emailSignInStart } from '../redux/user/user.action'\n\n\nimport './sign-in.style.scss'\n\nclass SignIn extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { emailSignInStart } = this.props;\n        const { email, password } = this.state;\n\n\n        emailSignInStart(email, password);\n\n        // try {\n        //     await auth.signInWithEmailAndPassword(email, password);\n        //     this.setState({ email: '', password: '' })\n        // } catch (err) {\n        //     alert(\"The user Email / Password wrong or not exist !\")\n        //     console.log(err)\n        // }\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n    render() {\n        const { googleSignInStart } = this.props;\n        return (\n            <div className=\"sign-in\">\n                <h1 className=\"title\">I have already an account</h1>\n                <p>Sign in with your Email and Password</p>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        name='email'\n                        type='email'\n                        value={this.state.email}\n                        label=\"email\"\n                        required\n                        handleChange={this.handleChange}\n                    />\n                    {/* <label>Email:</label> */}\n                    <FormInput\n                        name='password'\n                        type='password'\n                        value={this.state.password}\n                        label=\"password\"\n                        required\n                        handleChange={this.handleChange}\n                    />\n                    {/* <label>Password:</label> */}\n                    <div className=\"buttons\">\n                        <CustomButton type='submit'>Sign In</CustomButton>\n                        <CustomButton onClick={googleSignInStart} isGoogleButton>Sign In with Google</CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}