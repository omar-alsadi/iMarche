{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyBJTX7Ca8i_gtEzeXX6rgaQoOfQG2tSVMY\",\n  authDomain: \"clothy-store.firebaseapp.com\",\n  databaseURL: \"https://clothy-store.firebaseio.com\",\n  projectId: \"clothy-store\",\n  storageBucket: \"clothy-store.appspot.com\",\n  messagingSenderId: \"697380228396\",\n  appId: \"1:697380228396:web:60dca0ec64c1be5503b089\",\n  measurementId: \"G-12R4W3EJ8K\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date(); // create a new user from user auth to our database\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider(); // we can use authentication on facebook , twitter or other ... twitterAuthProvider()\n\nprovider.setCustomParameters({\n  prompts: 'select_account'\n}); // to trigger the Google pop up when ever we use Google auth provider \n// for authintication or sign in with google\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/Roxas/Documents/Websites/clothy/src/component/firebase/firebase-utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","err","console","log","auth","provider","GoogleAuthProvider","setCustomParameters","prompts","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,8BAFD;AAGXC,EAAAA,WAAW,EAAE,qCAHF;AAIXC,EAAAA,SAAS,EAAE,cAJA;AAKXC,EAAAA,aAAa,EAAE,0BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAEzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAElB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AAEA,UAAMW,QAAQ,GAAG,IAAIC,IAAJ,EAAjB,CAJkB,CAMlB;;AACA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,QAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAOH,KARD,CAQE,OAAOa,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAEJ;;AAED,SAAOZ,OAAP;AAEH,CA/BM;AAkCP,OAAO,MAAMe,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMd,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMe,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;;AAEAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,E,CACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAIP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyBJTX7Ca8i_gtEzeXX6rgaQoOfQG2tSVMY\",\n    authDomain: \"clothy-store.firebaseapp.com\",\n    databaseURL: \"https://clothy-store.firebaseio.com\",\n    projectId: \"clothy-store\",\n    storageBucket: \"clothy-store.appspot.com\",\n    messagingSenderId: \"697380228396\",\n    appId: \"1:697380228396:web:60dca0ec64c1be5503b089\",\n    measurementId: \"G-12R4W3EJ8K\"\n}\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n    const snapShot = await userRef.get()\n\n    if (!snapShot.exists) {\n\n        const { displayName, email } = userAuth;\n\n        const createAt = new Date();\n\n        // create a new user from user auth to our database\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createAt,\n                ...additionalData\n            })\n\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    return userRef;\n\n}\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n// we can use authentication on facebook , twitter or other ... twitterAuthProvider()\n\nprovider.setCustomParameters({ prompts: 'select_account' })\n// to trigger the Google pop up when ever we use Google auth provider \n// for authintication or sign in with google\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}