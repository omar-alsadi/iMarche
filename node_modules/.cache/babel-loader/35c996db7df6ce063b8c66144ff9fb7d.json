{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase-utils';\nimport { fetchingCollectionStart, fetchingCollectionSuccess, fetchingCollectionFailure } from './shop.action';\nimport ShopActionType from './shop.type';\nexport function* fetchCollectionsAsyn() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // to change isFetching to true\n\n    yield put(fetchingCollectionStart());\n    yield put(fetchingCollectionSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchingCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionType.FETCH_COLLECTIONS_START, fetchCollectionsAsyn);\n}","map":{"version":3,"sources":["/Users/Roxas/Documents/Websites/clothy/src/component/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchingCollectionStart","fetchingCollectionSuccess","fetchingCollectionFailure","ShopActionType","fetchCollectionsAsyn","collectionRef","collection","snapshot","get","collectionsMap","err","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,YAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,uBADJ,EAEIC,yBAFJ,EAGIC,yBAHJ,QAIO,eAJP;AAMA,OAAOC,cAAP,MAA2B,aAA3B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,MAAI;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAkCQ,QAAlC,CAAjC,CAHA,CAKA;;AACA,UAAMV,GAAG,CAACG,uBAAuB,EAAxB,CAAT;AAEA,UAAMH,GAAG,CAACI,yBAAyB,CAACQ,cAAD,CAA1B,CAAT;AAEH,GAVD,CAUE,OAAOC,GAAP,EAAY;AACV,UAAMb,GAAG,CAACK,yBAAyB,CAACS,KAAK,CAACC,OAAP,CAA1B,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMlB,SAAS,CACXQ,cAAc,CAACW,uBADJ,EAEXV,oBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase-utils'\n\nimport {\n    fetchingCollectionStart,\n    fetchingCollectionSuccess,\n    fetchingCollectionFailure\n} from './shop.action'\n\nimport ShopActionType from './shop.type'\n\nexport function* fetchCollectionsAsyn() {\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n\n        // to change isFetching to true\n        yield put(fetchingCollectionStart())\n\n        yield put(fetchingCollectionSuccess(collectionsMap));\n\n    } catch (err) {\n        yield put(fetchingCollectionFailure(error.message))\n    }\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionType.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsyn\n    )\n}"]},"metadata":{},"sourceType":"module"}